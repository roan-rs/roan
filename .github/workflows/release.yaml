name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  PROJECT_NAME: roan

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
          GITHUB_REPO: ${{ github.repository }}

  build:
    name: Build for multiple platforms
    needs: changelog
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            os: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            os: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Binary
        run: cargo build --verbose --locked --release --target ${{ matrix.target }}

      - name: Prepare Binary for Release
        shell: bash
        run: |
          BIN_SUFFIX=""
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            BIN_SUFFIX=".exe"
          fi
          
          # The built binary output location
          BIN_OUTPUT="target/${{ matrix.target }}/release/${PROJECT_NAME}${BIN_SUFFIX}"
          
          # Define a better name for the final binary
          BIN_RELEASE="${PROJECT_NAME}-${{ matrix.name }}${BIN_SUFFIX}"
          BIN_RELEASE_VERSIONED="${PROJECT_NAME}-${{ github.ref_name }}-${{ matrix.name }}${BIN_SUFFIX}"
          
          # Create an artifacts directory for the release
          mkdir -p release_artifacts
          
          # Move the built binary to the release artifacts directory
          mv "${BIN_OUTPUT}" "./release_artifacts/${BIN_RELEASE}"

      - name: Upload Binary Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binary_${{ matrix.name }}
          path: ./release_artifacts/${PROJECT_NAME}-${{ matrix.name }}*

  upload:
    name: Upload the release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: binary_${{ matrix.name }}

      - name: Create GitHub release and upload binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ needs.changelog.outputs.release_body }}
          file: ./release_artifacts/${PROJECT_NAME}-${{ matrix.name }}*.zip
